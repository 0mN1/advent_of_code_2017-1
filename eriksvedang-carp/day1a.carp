(use Int)
(use Array)

(defn wrapped-nth [xs i]
  @(nth xs (mod i (count xs))))

(defn match-value [xs i]
  (let [a (wrapped-nth xs i)
        b (wrapped-nth xs (inc i))]
    (if (= a b) a 0)))

(defn pos-ref? [x]
  (< -1 @x))

(defn parse [s]
  (let [cs (String.chars s)]
    (filter pos-ref? (copy-map Char.meaning &cs))))

(defn main []
  (let [input (IO.read-file "day1.txt")
        ints (parse &input)]
    (let [sum 0
          len (count &ints)]
      (do
        (for [i 0 len]
          (set! &sum (+ sum (match-value &ints i))))
        (IO.println (refstr sum))))))
